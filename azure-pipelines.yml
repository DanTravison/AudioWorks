pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release-Windows'

steps:
- script: |
    dotnet build AudioWorks\AudioWorks.sln --configuration $(buildConfiguration)
  displayName: 'Build $(buildConfiguration) configuration'

- powershell: |
    Invoke-WebRequest -Uri https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -OutFile nuget.exe
    Invoke-WebRequest -Uri https://audioworks.blob.core.windows.net/prerequisites/AppleApplicationSupport.msi -OutFile AppleApplicationSupport.msi
    Invoke-WebRequest -Uri https://audioworks.blob.core.windows.net/prerequisites/AppleApplicationSupport64.msi -OutFile AppleApplicationSupport64.msi
  displayName: 'Download prerequisites'

- script: |
    COPY /Y nuget.exe "%SystemRoot%\System32"
    msiexec /i AppleApplicationSupport.msi /qb-
    msiexec /i AppleApplicationSupport64.msi /qb-
    dotnet tool install --global dotnet-reportgenerator-globaltool
  displayName: 'Install prerequisites'

- powershell: |
    $settingsDir = "$([System.Environment]::GetFolderPath(28))\AudioWorks"
    $localFeedDir = (New-Item "$settingsDir\LocalFeed" -ItemType Directory).FullName
    Get-ChildItem -Path AudioWorks\src\Extensions -Filter *.nupkg -Recurse | Select-Object -ExpandProperty FullName | % { nuget add $_ -Source $localFeedDir -NonInteractive }
    $content = Get-Content AudioWorks\src\AudioWorks.Common\settings.json | ConvertFrom-Json
    $content.EnableTelemetry = $false
    $content.ExtensionRepository = $localFeedDir
    $content | ConvertTo-Json | Set-Content "$settingsDir\settings.json"
    Get-ChildItem -Path AudioWorks\tests -Filter *.Tests -Directory | % { dotnet test --no-build $_.FullName --logger trx --framework netcoreapp2.1 -c $env:buildConfiguration --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./coverage.netcoreapp2.1.xml /p:Exclude="[AudioWorks.*.Tests]*%2c[AudioWorks.TestUtilities]*%2c[*]JetBrains.Annotations.*" /p:IncludeDirectory="$settingsDir\Extensions\netcoreapp2.1\*%2cAudioWorks.Commands\netcoreapp2.1" }
    Get-ChildItem -Path AudioWorks\tests -Filter *.Tests -Directory | % { dotnet test --no-build $_.FullName --logger trx --framework net471 -c $env:buildConfiguration --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./coverage.net471.xml /p:Exclude="[AudioWorks.*.Tests]*%2c[AudioWorks.TestUtilities]*%2c[*]JetBrains.Annotations.*" /p:IncludeDirectory="$settingsDir\Extensions\netstandard2.0\*%2cAudioWorks.Commands\netstandard2.0" }
  displayName: 'Run tests'

- script: |
    %USERPROFILE%\.dotnet\tools\reportgenerator -reports:AudioWorks\tests\*\coverage.*.xml -targetdir:Reports\Cobertura -reporttypes:Cobertura
    %USERPROFILE%\.dotnet\tools\reportgenerator -reports:Reports\Cobertura\Cobertura.xml -targetdir:Reports\HTML "-reporttypes:HTMLInline;HTMLChart"
  displayName: 'Generate coverage results'

- task: PublishTestResults@2
  inputs:
    testRunner: xUnit
    testResultsFiles: '**/*.trx'

- task: PublishCodeCoverageResults@1
  inputs:
    codecoverageTool: cobertura
    summaryFileLocation: $(Build.SourcesDirectory)\Reports\Cobertura\Cobertura.xml
    reportDirectory: $(Build.SourcesDirectory)\Reports\HTML

- task: CopyFiles@2
  inputs:
    #sourceFolder: # Optional
    contents: **\*.nupkg
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1